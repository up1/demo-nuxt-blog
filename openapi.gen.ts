/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/blogs": {
    /**
     * List all blogs
     * @description List all blogs
     */
    get: operations["listAllBlogs"];
  };
  "/users/login": {
    /**
     * Existing user login
     * @description Login for existing user
     */
    post: operations["Login"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    LoginUser: {
      email: string;
      /** Format: password */
      password: string;
    };
    Blog: {
      id?: number;
      slug?: string;
      username: string;
      title: string;
      description: string;
      tags: string[];
      /** Format: date-time */
      createdDate: string;
      favoritesCount: number;
    };
    User: {
      email: string;
      token: string;
      username: string;
      bio: string;
      image: string;
    };
  };
  responses: {
    /** @description List all blogs */
    BlogsResponse: {
      content: {
        "application/json": {
          body: components["schemas"]["Blog"][];
          blogCount: number;
        };
      };
    };
    /** @description User */
    UserResponse: {
      content: {
        "application/json": {
          user: components["schemas"]["User"];
        };
      };
    };
  };
  parameters: never;
  requestBodies: {
    LoginUserRequest: {
      content: {
        "application/json": components["schemas"]["LoginUser"];
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * List all blogs
   * @description List all blogs
   */
  listAllBlogs: {
    responses: {
      200: components["responses"]["BlogsResponse"];
      /** @description Not found */
      404: {
        content: {
          "application/json": {
            /** @example Blog not found */
            message?: string;
          };
        };
      };
    };
  };
  /**
   * Existing user login
   * @description Login for existing user
   */
  Login: {
    requestBody: components["requestBodies"]["LoginUserRequest"];
    responses: {
      200: components["responses"]["UserResponse"];
    };
  };
}
